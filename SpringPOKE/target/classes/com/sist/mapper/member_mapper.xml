<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.mapper.member_mapper">

	<select id="memberInfoData" parameterType="String"
		resultType="MemberVO">
		SELECT id, nickname, pwd, name,
		TO_CHAR(birthdate, 'YYYY-MM-DD') AS dbbirthday,
		TO_CHAR(regdate, 'YYYY-MM-DD') AS dbregdate,
		sex, phone, post, addr1, addr2, photo,
		email, grade, admin
		FROM member
		WHERE id = #{id}
	</select>

	<select id="memberIdCheck" parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM member WHERE LOWER(id)=#{id}
	</select>
	<select id="memberNickCheck" parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM member WHERE
		LOWER(nickname)=#{nickname}
	</select>
	<select id="memberPhoneCheck" parameterType="String" resultType="int">
	SELECT COUNT(*) FROM
	(SELECT replace(phone, '-', '') as phone FROM member)
	WHERE phone=#{phone}
	</select>
	<select id="memberEmailCheck" parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM member WHERE email=#{email}
	</select>
	<select id="memberUpdateData" resultType="MemberVO"
		parameterType="string">
		SELECT
		id,name,sex,birthdate,post,addr1,addr2,phone,email
		FROM member
		WHERE
		id=#{id}
	</select>

	<select id="memberGetPassword" resultType="string"
		parameterType="string">
		SELECT pwd FROM member WHERE id = #{id,jdbcType=VARCHAR}
	</select>



	<insert id="memberInsert" parameterType="MemberVO">
		INSERT INTO member
		values (#{id}, #{nickname}, #{pwd}, #{name},
		#{dbbirthday}, #{sex},
		#{phone}, #{post}, #{addr1}, #{addr2}, 1, null,
		0, sysdate, #{email})
	</insert>

	<update id="memberUpdate" parameterType="MemberVO">
		UPDATE member
		SET
		nickname=#{nickname, jdbcType=VARCHAR},
		pwd=#{pwd, jdbcType=VARCHAR},
		name=#{name, jdbcType=VARCHAR},
		birthdate=#{birthdate, jdbcType=DATE},
		post=#{post, jdbcType=VARCHAR},
		addr1=#{addr1, jdbcType=VARCHAR},
		addr2=#{addr2, jdbcType=VARCHAR},
		phone=#{phone, jdbcType=VARCHAR},
		email=#{email, jdbcType=VARCHAR}
		WHERE id=#{id, jdbcType=VARCHAR}
	</update>

	<update id="changePwd" parameterType="hashmap">
		UPDATE member
		SET pwd=#{pwd, jdbcType=VARCHAR}
		WHERE id=#{id, jdbcType=VARCHAR}
	</update>


	<delete id="deleteMember" parameterType="String">
		DELETE FROM member
		WHERE
		id = #{id}
	</delete>
	<select id="memberGrade" resultType="int" parameterType="String">
	SELECT grade FROM member WHERE id=#{id}
	</select>
	<update id="gradeIncrement" parameterType="String">
	UPDATE member SET grade=grade+1 WHERE id=#{id}
	</update>
	<update id="gradeDecrement" parameterType="String">
	UPDATE member SET grade=grade-1 WHERE id=#{id}
	</update>
	<select id="idFind" resultType="String" parameterType="hashmap">
	SELECT id FROM
	(SELECT id, email, replace(phone, '-', '') as phone FROM member)
	WHERE ${type} = #{ss}
	</select>
	<select id="pwdFind" resultType="String" parameterType="hashmap">
	SELECT pwd FROM
	(SELECT id,pwd, email, replace(phone, '-', '') as phone FROM member)
	WHERE ${type} = #{ss} AND id=#{id}
	</select>

	<!-- ID NICKNAME PWD NAME BIRTHDATE SEX PHONE POST ADDR1 ADDR2 GRADE PHOTO 
		ADMIN REGDATE EMAIL -->
	
</mapper>